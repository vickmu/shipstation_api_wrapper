from pydantic import BaseModel, Field
from typing import List, Optional, Union
from datetime import datetime

class Product(BaseModel):
    productId: int = Field(..., description="The system-generated identifier for the product.", read_only=True)
    sku: Optional[str] = Field(..., description="Stock Keeping Unit (SKU). A user-defined value for a product to help identify the product.")
    name: Optional[str] = Field(..., description="Name or description of the product.")
    price: Optional[float] = Field(..., description="The unit price of the product.")
    defaultCost: Optional[float] = Field(..., description="The seller's cost for this product.")
    length: Optional[float] = Field(..., description="The length of the product. UOM is UI-dependent.")
    width: Optional[float] = Field(..., description="The width of the product. UOM is UI-dependent.")
    height: Optional[float] = Field(..., description="The height of the product. UOM is UI-dependent.")
    weightOz: Optional[float] = Field(..., description="The weight of a single item in ounces.")
    internalNotes: Optional[str] = Field(None, description="Seller's private notes for the product.")
    fulfillmentSku: Optional[str] = Field(None, description="SKU for the fulfillment of that product by a 3rd party.")
    createDate: Optional[datetime] = Field(..., description="Timestamp for when the product record was created.", read_only=True)
    modifyDate: Optional[datetime] = Field(..., description="Timestamp for when the product record was modified.", read_only=True)
    active: Optional[bool] = Field(..., description="Specifies whether the product is an active record.")
    productCategory: List[Union[int, str]] = Field(..., description="The ProductCategory used to organize and report on similar products.")
    productType: Optional[str] = Field(..., description="Specifies the product type.")
    warehouseLocation: Optional[str] = Field(..., description="The warehouse location associated with the product record.")
    defaultCarrierCode: Optional[str] = Field(None, description="The default domestic shipping carrier for this product.")
    defaultServiceCode: Optional[str] = Field(None, description="The default domestic shipping service for this product.")
    defaultPackageCode: Optional[str] = Field(None, description="The default domestic packageType for this product.")
    defaultIntlCarrierCode: Optional[str] = Field(None, description="The default international shipping carrier for this product.")
    defaultIntlServiceCode: Optional[str] = Field(None, description="The default international shipping service for this product.")
    defaultIntlPackageCode: Optional[str] = Field(None, description="The default international packageType for this product.")
    defaultConfirmation: Optional[str] = Field(None, description="The default domestic Confirmation type for this Product.")
    defaultIntlConfirmation: Optional[str] = Field(None, description="The default international Confirmation type for this Product.")
    customsDescription: Optional[str] = Field(None, description="The default customs Description for the product.")
    customsValue: Optional[float] = Field(None, description="The default customs Declared Value for the product.")
    customsTariffNo: Optional[str] = Field(None, description="The default Harmonized Code for the Product.")
    customsCountryCode: Optional[str] = Field(None, description="The default two-letter ISO Origin Country code for the Product.")
    noCustoms: Optional[bool] = Field(None, description="If true, this product will not be included on international customs forms.")
    tags: Optional[List[Union[int, str]]] = Field(..., description="The ProductTag helps to organize and visually identify products.")
